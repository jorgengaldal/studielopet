---
export const prerender = false;

import Layout from "../../layouts/Layout.astro";
import BarGraph from "../../components/graphs/BarGraph.astro";
import { allEquals, getUnique } from "../../utils/object";
import { getColorByStudyProgrammeCode } from "../../utils/utils";
import { fetchCourses, fetchGradeEntries, getDataForGraph } from "../../utils/hkdirApi";
import ParameterSelect from "../../components/ParameterSelect.astro";

const allCourses = (await fetchCourses())

const {courseCode} = Astro.params;
const page = allCourses.find((courseObject) => courseObject.courseCode.slice(0, -2) === courseCode);
console.log(page)

if (!page) return Astro.redirect("/404");

// Values for specifying graph
const filtering = {
  courseCode: page.courseCode,
  // year: page.year,
//   semester: page.semester,
};

// Course code without version number
const presentableCourseCode = page.courseCode.slice(0, -2)

const gradeEntries = await fetchGradeEntries(["BIT", "MTDT"], filtering.courseCode);

const filteredGradeEntries = gradeEntries.filter((entry) => allEquals(entry, filtering))

let data;
let semester: string;
let year: number;

if (filteredGradeEntries.length != 0) {
  semester = filteredGradeEntries[0].semester
  year = filteredGradeEntries[0].year
  data = getDataForGraph(filteredGradeEntries.filter((entry) => {
    return entry.year == year && entry.semester == semester
  }));
}
  
---

<Layout subtitle={presentableCourseCode}>
  <div class="flex flex-col items-center w-full">
    <div class="flex flex-col w-full items-center mb-5">
      <h2 class="text-3xl">{page.courseName}</h2>
      <p class="text-md font-thin">{presentableCourseCode}</p>
      <div class="w-2/3 h-1 rounded-sm bg-indigo-400"></div>
    </div>

    <ParameterSelect/>

    <div class="w-full flex flex-col items-center">
      {data ? 
        <h3 class="text-md font-bold mb-2">{semester!} {year!}</h3>
        <BarGraph
        data={data}
        seriesConfig={getUnique(
          gradeEntries,
          (entry) => entry.studyProgrammeCode
        ).map((code) => ({
            label: code,
            color: getColorByStudyProgrammeCode(code),
          }))}
        /> :
        <p><i>Ingen data for de spesifiserte parametrene.</i></p>
      }
    </div>
  </div>
</Layout>